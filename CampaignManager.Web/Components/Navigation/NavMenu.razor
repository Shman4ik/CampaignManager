@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<nav class="bg-gray-800">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex items-center justify-between h-16">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <span class="text-white font-bold">Campaign Manager</span>
                </div>
                <div class="hidden md:block">
                    <div class="ml-10 flex items-baseline space-x-4">
                        <NavLink href="" Match="NavLinkMatch.All" class="text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium">Главная</NavLink>
                        <AuthorizeView Roles="Administrator">
                            <NavLink href="create-campaign" class="text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium">Создать кампанию</NavLink>
                        </AuthorizeView>
                    </div>
                </div>
            </div>
            <div class="hidden md:block">
                <div class="ml-4 flex items-center md:ml-6">
                    <AuthorizeView>
                        <Authorized>
                            <span class="text-gray-300 mr-4">@context.User.Identity?.Name</span>
                            <button @onclick="Logout" class="text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium">Выйти</button>
                        </Authorized>
                        <NotAuthorized>
                            <button @onclick="Login" class="text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium">Войти</button>
                        </NotAuthorized>
                    </AuthorizeView>
                </div>
            </div>
        </div>
    </div>
</nav>

@code {
    private async Task Login()
    {
        NavigationManager.NavigateTo("api/account/login", forceLoad: true);
    }

    private async Task Logout()
    {
        NavigationManager.NavigateTo("api/account/logout", forceLoad: true);
    }
}