@page "/campaign/{CampaignId:guid}"
@using CampaignManager.Web.Model
@inject CampaignCharacterService CampaignCharacterService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Просмотр кампании</PageTitle>

<div class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
    <div class="px-4 py-6 sm:px-0">
        @if (Campaign == null)
        {
            <div class="text-center py-4">
                <p class="text-gray-500">Загрузка кампании...</p>
            </div>
        }
        else
        {
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                <div class="md:col-span-1">
                    <div class="bg-white shadow-lg rounded-lg p-6">
                        <div class="mb-6">
                            <h2 class="text-2xl font-bold text-gray-800">@Campaign.Name</h2>
                            <p class="text-sm text-gray-600">
                                Создано: @Campaign.CreatedAt
                            </p>
                        </div>

                        <div class="mb-6">
                            <h3 class="text-lg font-semibold mb-2">Ведущий:</h3>
                            <p class="text-gray-700">@Campaign.KeeperEmail</p>
                        </div>

                        <div class="mb-6">
                            <h3 class="text-lg font-semibold mb-2">Игроки:</h3>
                            <div class="space-y-2">
                                @foreach (var player in Campaign.Players)
                                {
                                    <div class="flex items-center justify-between bg-gray-50 p-2 rounded">
                                        <span class="text-gray-700">@player.PlayerEmail</span>
                                        @if (IsCurrentUser(player.PlayerEmail))
                                        {
                                            <span class="ml-2 text-xs px-2 py-1 bg-blue-100 text-blue-800 rounded-full">Вы</span>
                                        }
                                        <button
                                            @onclick="() => NavigateToPlayerCharacters(Campaign.Id, player.PlayerEmail)"
                                            class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-1 rounded text-sm">
                                            Персонажи
                                        </button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <div class="md:w-2/3">
                    <div class="bg-white shadow-lg rounded-lg p-6">
                        <h3 class="text-xl font-bold mb-4">Ваши персонажи в этой кампании</h3>

                        @if (UserCharacter == null)
                        {
                            <p>У вас пока нет персонажей в этой кампании.</p>
                            <div class="mt-4">
                                <button @onclick="CreateNewCharacter"
                                        class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded">
                                    Создать нового персонажа
                                </button>
                            </div>
                        }
                        else
                        {
                            <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
                                <div class="bg-gray-50 overflow-hidden shadow rounded-lg">
                                    <div class="px-4 py-5 sm:p-6">
                                        <h4 class="text-lg font-medium text-gray-900 truncate">
                                            @UserCharacter.PersonalInfo.Name
                                        </h4>
                                        <dl class="mt-2 space-y-1">
                                            <div class="text-sm font-normal text-gray-500">
                                                <dt class="inline">Профессия:</dt>
                                                <dd class="inline ml-1">@UserCharacter.PersonalInfo.Occupation</dd>
                                            </div>
                                            <div class="text-sm font-normal text-gray-500">
                                                <dt class="inline">Возраст:</dt>
                                                <dd class="inline ml-1">@UserCharacter.PersonalInfo.Age</dd>
                                            </div>
                                        </dl>
                                        <div class="mt-4">
                                            <button @onclick="() => EditCharacter(UserCharacter.Id)"
                                                    class="w-full bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded">
                                                Редактировать
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    [Parameter] public Guid CampaignId { get; set; }

    private Campaign Campaign { get; set; }
    private Character UserCharacter { get; set; }
    private string CurrentUserEmail { get; set; }
    private bool IsGameMaster => Campaign?.KeeperEmail == CurrentUserEmail;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        CurrentUserEmail = authState.User.FindFirst(ClaimTypes.Email)?.Value;

        await LoadCampaignData();
    }

    private async Task LoadCampaignData()
    {
        Campaign = await CampaignCharacterService.GetCampaignAsync(CampaignId);
        if (Campaign != null && CurrentUserEmail != null)
        {
            UserCharacter = await CampaignCharacterService.GetPlayerCharactersInCampaignAsync(CampaignId);
        }
    }

    private bool IsCurrentUser(string userId)
    {
        return userId == CurrentUserEmail;
    }

    private void NavigateToPlayerCharacters(Guid campaignId, string playerId)
    {
        NavigationManager.NavigateTo($"/campaign/{campaignId}/player/{playerId}/character");
    }

    private void CreateNewCharacter()
    {
        NavigationManager.NavigateTo($"/campaign/{CampaignId}/character/create");
    }

    private void EditCharacter(Guid characterId)
    {
        NavigationManager.NavigateTo($"/character/{characterId}");
    }    
}