@using CampaignManager.Web.Components.Features.Characters.Model
<div class="bg-white shadow rounded-md p-4 mb-4">
    <h3 class="text-xl font-bold mb-4">Наличные и активы</h3>

    <!-- Мобильный и десктопный вид (адаптивная сетка) -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <!-- Карманные деньги -->
        <div class="bg-gray-50 p-4 rounded-md shadow-sm md:bg-transparent md:p-0 md:shadow-none">
            <label for="pocket-money" class="block text-sm font-medium text-gray-700 mb-1">Карманные деньги</label>
            <input type="text" id="pocket-money" @bind="Character.Finances.PocketMoney"
                   class="w-full px-2 py-1 text-sm border border-gray-300 rounded"/>
        </div>

        <!-- Наличные деньги -->
        <div class="bg-gray-50 p-4 rounded-md shadow-sm md:bg-transparent md:p-0 md:shadow-none">
            <label for="cash" class="block text-sm font-medium text-gray-700 mb-1">Наличные деньги</label>
            <input type="text" id="cash" @bind="Character.Finances.Cash"
                   class="w-full px-2 py-1 text-sm border border-gray-300 rounded"/>
        </div>

        <!-- Активы (общий блок) -->
        <div class="mb-4 md:col-span-2 bg-gray-50 p-4 rounded-md shadow-sm md:bg-transparent md:p-0 md:shadow-none">
            <label for="assets" class="block text-sm font-medium text-gray-700 mb-2">Активы</label>
            <div class="flex flex-col space-y-3">
                @for (var i = 0; i < Character.Finances.Assets.Count; i++)
                {
                    var index = i;
                    <div class="flex items-center">
                        <input type="text" value="@Character.Finances.Assets[index]"
                               @onchange="@(e => UpdateAsset(index, e.Value?.ToString() ?? string.Empty))"
                               class="flex-grow px-2 py-1 text-sm border border-gray-300 rounded mr-2"/>
                        <div class="flex justify-center space-x-2">
                            <button @onclick:stopPropagation="true" @onclick="() => RemoveAssetAt(index)"
                                    class="text-red-600 hover:text-red-900 px-2 py-1">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24"
                                     stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                          d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                                </svg>
                            </button>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
    <button @onclick="AddNewAsset"
            class="w-full md:w-auto bg-blue-500 hover:bg-blue-600 text-white font-bold px-4 py-2 rounded-md">
        Добавить актив
    </button>
</div>

@code {
    [Parameter] public required Character Character { get; set; }

    private void AddNewAsset()
    {
        Character.Finances.Assets.Add(string.Empty);
    }

    private void RemoveAssetAt(int index)
    {
        if (index >= 0 && index < Character.Finances.Assets.Count)
        {
            Character.Finances.Assets.RemoveAt(index);
        }
    }

    private void UpdateAsset(int index, string value)
    {
        if (index >= 0 && index < Character.Finances.Assets.Count)
        {
            Character.Finances.Assets[index] = value;
        }
    }

}
