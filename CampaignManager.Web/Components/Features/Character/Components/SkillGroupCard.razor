<div class="bg-white shadow rounded-lg p-4">
    <h4 class="text-lg font-semibold mb-3">@Group.Name</h4>
    <div class="space-y-2 xl:space-y-3">
        @foreach (var skill in Group.Skills)
        {
            <div class="flex flex-col xl:flex-row xl:items-start gap-2 xl:gap-3">
                <div class="flex items-center gap-2 flex-grow min-w-0">
                    <button @onclick="@(() => RemoveSkill(skill))"
                            class="text-red-500 hover:text-red-700 flex-shrink-0">
                        <i class="fas fa-times"></i>
                    </button>
                    <div class="min-w-0 flex-grow">
                        <div>
                            <span class="font-medium break-all hyphens-auto mr-1 text-sm"
                                  style="word-break: break-word;">@skill.Name</span>
                            <span class="text-xs text-gray-500 flex-shrink-0">(@skill.BaseValue)</span>
                        </div>
                    </div>
                </div>
                <div
                    class="flex items-center gap-2 flex-shrink-0 ml-auto xl:ml-0 w-full xl:w-auto justify-between xl:justify-start">
                    <input type="checkbox" checked="@skill.IsUsed" @onchange="@(e => OnSkillUsedChanged(skill, e))"
                           class="text-center"/>
                    <input type="number" value="@skill.Value.Regular"
                           @onchange="@(e => OnSkillValueChanged(skill, e))"
                           class="w-16 p-1 text-center border border-gray-300 rounded"/>
                    <input type="number" value="@skill.Value.Half" disabled
                           class="w-16 p-1 text-center bg-gray-100 border border-gray-300 rounded"/>
                    <input type="number" value="@skill.Value.Fifth" disabled
                           class="w-16 p-1 text-center bg-gray-100 border border-gray-300 rounded"/>
                </div>
            </div>
        }
    </div>

    <!-- Единый блок добавления навыка для всех размеров экрана -->
    <div class="mt-3 flex flex-wrap items-center gap-2">
        <div class="flex flex-1 min-w-0 gap-2 items-center">
            <input type="text" @bind="Group.NewSkillName" placeholder="Навык"
                   class="flex-grow min-w-0 p-1 xl:p-2 text-sm border border-gray-300 rounded"/>
            <input type="text" @bind="Group.NewSkillBaseValue" placeholder="БЗ"
                   class="w-14 xl:w-16 p-1 xl:p-2 text-sm border border-gray-300 rounded"/>
        </div>
        <button @onclick="AddSkill"
                class="bg-green-500 text-white h-8 w-8 rounded-full hover:bg-green-600 flex items-center justify-center flex-shrink-0">
            <i class="fas fa-plus text-sm"></i>
        </button>
    </div>
</div>

@code {
    [Parameter] public SkillGroup Group { get; set; }

    private void AddSkill()
    {
        if (!string.IsNullOrWhiteSpace(Group.NewSkillName) && !string.IsNullOrWhiteSpace(Group.NewSkillBaseValue))
        {
            Group.Skills.Add(new Skill
            {
                Name = Group.NewSkillName,
                BaseValue = Group.NewSkillBaseValue,
                Value = new AttributeValue(0)
            });
            Group.NewSkillName = "";
            Group.NewSkillBaseValue = "";
        }
    }

    private void RemoveSkill(Skill skill)
    {
        Group.RemoveSkill(skill);
    }

    private void OnSkillUsedChanged(Skill skill, ChangeEventArgs args)
    {
        if (args.Value is bool newValue)
        {
            skill.IsUsed = newValue;
        }
    }

    private void OnSkillValueChanged(Skill skill, ChangeEventArgs args)
    {
        if (args.Value != null && int.TryParse(args.Value.ToString(), out var newValue))
        {
            skill.Value.Regular = newValue;
            skill.Value.UpdateDerived();
        }
    }

}