@using CampaignManager.Web.Components.Features.Characters.Model
@using CampaignManager.Web.Model
@using CampaignManager.Web.Components.Features.Scenarios.Model
@inject NavigationManager NavigationManager

<div class="bg-white shadow-md rounded-lg overflow-hidden hover:shadow-lg transition-shadow duration-300">
    <div class="p-6">
        <div class="flex justify-between items-start mb-2">
            <h2 class="text-xl font-semibold">@Template.CharacterName</h2>
            <div class="flex space-x-1">
                <button @onclick="() => EditTemplate(Template.Id)"
                        title="Изменить"
                        class="text-gray-600 hover:text-gray-800 p-1 rounded hover:bg-gray-100">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24"
                         stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
                    </svg>
                </button>
                <button @onclick="() => OnDelete.InvokeAsync(Template)"
                        title="Удалить"
                        class="text-red-600 hover:text-red-800 p-1 rounded hover:bg-red-50">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24"
                         stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                    </svg>
                </button>
                <button @onclick="() => OnLinkToScenario.InvokeAsync(Template)"
                        title="Привязать к сценарию"
                        class="text-green-600 hover:text-green-800 p-1 rounded hover:bg-green-50">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24"
                         stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"/>
                    </svg>
                </button>
            </div>
        </div>

        <!-- Tags section -->
        <div class="text-sm text-gray-600 mb-3 flex flex-wrap gap-2">
            <span class="inline-block bg-blue-100 text-blue-800 rounded-full px-3 py-1 text-xs">
                @(Template.Character?.CharacterType.ToString() ?? "Персонаж")
            </span>
            @if (Template.Character?.PersonalInfo?.Age != null)
            {
                <span class="inline-block bg-gray-100 text-gray-800 rounded-full px-3 py-1 text-xs">
                    @Template.Character.PersonalInfo.Age лет
                </span>
            }
            @if (!string.IsNullOrEmpty(Template.Character?.PersonalInfo?.Occupation))
            {
                <span class="inline-block bg-indigo-100 text-indigo-800 rounded-full px-3 py-1 text-xs">
                    @Template.Character.PersonalInfo.Occupation
                </span>
            }
            @if (Template.ScenarioId.HasValue)
            {
                <span class="inline-block bg-green-100 text-green-800 rounded-full px-3 py-1 text-xs">
                    В сценарии: @(Template.Scenario?.Name ?? "Сценарий")
                </span>
            }
        </div>

        <!-- Personal info and Image row -->
        <div class="flex flex-col md:flex-row gap-6 mb-4">
            <!-- Personal info section -->
            <div class="md:w-2/3">
                <h3 class="font-medium mb-1">Информация:</h3>
                <div class="grid grid-cols-2 text-sm gap-x-4">
                    @if (Template.Character?.PersonalInfo != null)
                    {
                        var info = Template.Character.PersonalInfo;
                        @if (!string.IsNullOrEmpty(info.Gender))
                        {
                            <div class="mb-1"><span class="font-semibold">Пол:</span> @info.Gender</div>
                        }
                        @if (!string.IsNullOrEmpty(info.Birthplace))
                        {
                            <div class="mb-1"><span class="font-semibold">Место рождения:</span> @info.Birthplace</div>
                        }
                        @if (!string.IsNullOrEmpty(info.Residence))
                        {
                            <div class="mb-1"><span class="font-semibold">Место жительства:</span> @info.Residence</div>
                        }
                        @if (!string.IsNullOrEmpty(info.Build))
                        {
                            <div class="mb-1"><span class="font-semibold">Телосложение:</span> @info.Build</div>
                        }
                    }
                </div>
            </div>

            <!-- Placeholder for image, since we don't have one in the model -->
            <div class="md:w-1/3 flex items-center justify-center bg-gray-100 rounded-md">
                <div class="text-gray-400 text-4xl p-8">
                    <i class="fa-solid fa-user"></i>
                </div>
            </div>
        </div>

        <!-- Description section -->
        @if (Template.Character?.Backstory != null && !string.IsNullOrEmpty(Template.Character.Backstory))
        {
            <div class="w-full mt-4 text-gray-700 text-sm overflow-y-auto pr-2 custom-scrollbar" style="max-height: 100px;">
                <h3 class="font-medium mb-1 text-sm font-semibold">Предыстория:</h3>
                @Template.Character.Backstory
            </div>
        }

        
    </div>
</div>

@code {
    [Parameter] public required CharacterStorageDto Template { get; set; }

    [Parameter] public EventCallback<CharacterStorageDto> OnDelete { get; set; }

    [Parameter] public EventCallback<CharacterStorageDto> OnLinkToScenario { get; set; }

    private void EditTemplate(Guid id)
    {
        NavigationManager.NavigateTo($"/character/{id}");
    }
}
