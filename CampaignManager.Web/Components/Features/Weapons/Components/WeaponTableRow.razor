@using CampaignManager.Web.Components.Features.Weapons.Model
@using CampaignManager.Web.Extensions
@namespace CampaignManager.Web.Components.Features.Weapons.Components

<tr class="@(IsExpanded ? "bg-primary-50" : "hover:bg-gray-50") transition-all duration-200 cursor-pointer active:bg-gray-100"
    @onclick="ToggleExpand">
    <td class="px-4 sm:px-6 py-4 font-semibold text-gray-900">@Weapon.Name</td>
    <td class="px-4 sm:px-6 py-4">
        <span class="inline-flex items-center px-3 py-1.5 rounded-lg text-sm font-semibold bg-primary-100 text-primary-800 border border-primary-200">
            @Weapon.Type.ToRussianString()
        </span>
    </td>
    <td class="px-4 sm:px-6 py-4 text-gray-700 font-medium">@Weapon.Skill</td>
    <td class="px-4 sm:px-6 py-4 text-gray-700 font-medium">@Weapon.Damage</td>
    <td class="px-4 sm:px-6 py-4">
        <div class="flex flex-wrap gap-2">
            @if (Weapon.Is1920)
            {
                <span class="inline-flex items-center px-3 py-1.5 rounded-lg text-sm font-semibold bg-secondary-100 text-secondary-800 border border-secondary-200">
                    1920s
                </span>
            }
            @if (Weapon.IsModern)
            {
                <span class="inline-flex items-center px-3 py-1.5 rounded-lg text-sm font-semibold bg-secondary-100 text-secondary-800 border border-secondary-200">
                    Modern
                </span>
            }
        </div>
    </td>
    <td class="px-4 sm:px-6 py-4 text-gray-600">
        <div class="text-sm space-y-1.5">
            <div class="flex gap-2">
                <span class="font-semibold text-gray-700">Дист:</span> 
                <span>@Weapon.Range</span>
            </div>
            <div class="flex gap-2">
                <span class="font-semibold text-gray-700">Атаки:</span> 
                <span>@Weapon.Attacks</span>
            </div>
            @if (!string.IsNullOrEmpty(Weapon.Cost))
            {
                <div class="flex gap-2">
                    <span class="font-semibold text-gray-700">Цена:</span> 
                    <span>@Weapon.Cost</span>
                </div>
            }
        </div>
    </td>
    <td class="px-4 sm:px-6 py-4 text-center" @onclick:stopPropagation="true">
        <div class="flex flex-col sm:flex-row gap-2 justify-center">
            <button @onclick="() => OnEdit.InvokeAsync(Weapon)"
                    class="min-h-[44px] px-4 py-2 text-primary-600 hover:text-primary-800 bg-primary-50 hover:bg-primary-100 rounded-lg text-sm font-semibold flex items-center justify-center gap-2 transition-all duration-200 border border-primary-200">
                <i class="fas fa-edit"></i>
                <span>Изменить</span>
            </button>
            <button @onclick="() => OnDelete.InvokeAsync(Weapon)"
                    class="min-h-[44px] px-4 py-2 text-error-600 hover:text-error-800 bg-error-50 hover:bg-error-100 rounded-lg text-sm font-semibold flex items-center justify-center gap-2 transition-all duration-200 border border-error-200">
                <i class="fas fa-trash-alt"></i>
                <span>Удалить</span>
            </button>
        </div>
    </td>
</tr>

@if (IsExpanded)
{
    <tr class="bg-gradient-to-r from-gray-50 to-white border-t-2 border-primary-200">
        <td colspan="7" class="px-4 sm:px-6 py-6">
            <div class="bg-white rounded-xl p-6 shadow-inner border-2 border-gray-100">
                <h4 class="text-lg font-bold text-gray-900 mb-4 pb-2 border-b-2 border-primary-200">Подробная информация</h4>
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    <div class="space-y-1">
                        <h5 class="text-sm font-semibold text-gray-500 uppercase tracking-wide">Название</h5>
                        <p class="text-base font-medium text-gray-900">@Weapon.Name</p>
                    </div>
                    <div class="space-y-1">
                        <h5 class="text-sm font-semibold text-gray-500 uppercase tracking-wide">Тип</h5>
                        <p class="text-base font-medium text-gray-900">@Weapon.Type.ToRussianString()</p>
                    </div>
                    <div class="space-y-1">
                        <h5 class="text-sm font-semibold text-gray-500 uppercase tracking-wide">Навык</h5>
                        <p class="text-base font-medium text-gray-900">@Weapon.Skill</p>
                    </div>
                    <div class="space-y-1">
                        <h5 class="text-sm font-semibold text-gray-500 uppercase tracking-wide">Урон</h5>
                        <p class="text-base font-medium text-gray-900">@Weapon.Damage</p>
                    </div>
                    <div class="space-y-1">
                        <h5 class="text-sm font-semibold text-gray-500 uppercase tracking-wide">Дальность</h5>
                        <p class="text-base font-medium text-gray-900">@Weapon.Range</p>
                    </div>
                    <div class="space-y-1">
                        <h5 class="text-sm font-semibold text-gray-500 uppercase tracking-wide">Атаки</h5>
                        <p class="text-base font-medium text-gray-900">@Weapon.Attacks</p>
                    </div>
                    @if (!string.IsNullOrEmpty(Weapon.Cost))
                    {
                        <div class="space-y-1">
                            <h5 class="text-sm font-semibold text-gray-500 uppercase tracking-wide">Стоимость</h5>
                            <p class="text-base font-medium text-gray-900">@Weapon.Cost</p>
                        </div>
                    }
                    @if (!string.IsNullOrEmpty(Weapon.Ammo))
                    {
                        <div class="space-y-1">
                            <h5 class="text-sm font-semibold text-gray-500 uppercase tracking-wide">Боеприпасы</h5>
                            <p class="text-base font-medium text-gray-900">@Weapon.Ammo</p>
                        </div>
                    }
                    @if (!string.IsNullOrEmpty(Weapon.Malfunction))
                    {
                        <div class="space-y-1">
                            <h5 class="text-sm font-semibold text-gray-500 uppercase tracking-wide">Осечка</h5>
                            <p class="text-base font-medium text-gray-900">@Weapon.Malfunction</p>
                        </div>
                    }
                    <div class="space-y-2">
                        <h5 class="text-sm font-semibold text-gray-500 uppercase tracking-wide">Эпоха</h5>
                        <div class="flex flex-wrap gap-2">
                            @if (Weapon.Is1920)
                            {
                                <span class="inline-flex items-center px-3 py-1.5 rounded-lg text-sm font-semibold bg-secondary-100 text-secondary-800 border border-secondary-200">
                                    1920s
                                </span>
                            }
                            @if (Weapon.IsModern)
                            {
                                <span class="inline-flex items-center px-3 py-1.5 rounded-lg text-sm font-semibold bg-secondary-100 text-secondary-800 border border-secondary-200">
                                    Modern
                                </span>
                            }
                        </div>
                    </div>
                </div>
                @if (!string.IsNullOrEmpty(Weapon.Notes))
                {
                    <div class="mt-6 pt-4 border-t-2 border-gray-100">
                        <h5 class="text-sm font-semibold text-gray-500 uppercase tracking-wide mb-2">Примечания</h5>
                        <p class="text-base text-gray-700 whitespace-pre-wrap leading-relaxed">@Weapon.Notes</p>
                    </div>
                }
            </div>
        </td>
    </tr>
}

@code {
    [Parameter] public Weapon Weapon { get; set; } = new();
    [Parameter] public bool IsExpanded { get; set; }
    [Parameter] public EventCallback<Weapon> OnEdit { get; set; }
    [Parameter] public EventCallback<Weapon> OnDelete { get; set; }
    [Parameter] public EventCallback OnToggleExpand { get; set; }

    private async Task ToggleExpand()
    {
        await OnToggleExpand.InvokeAsync();
    }
}
