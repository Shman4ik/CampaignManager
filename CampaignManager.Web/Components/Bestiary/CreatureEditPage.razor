@page "/bestiary/creatures/edit/{Id:guid?}"
@using CampaignManager.Web.Components.Bestiary.Model
@using CampaignManager.Web.Components.Bestiary.Services
@using CampaignManager.Web.Utilities.Services
@using CampaignManager.Web.Components.Shared

@inject NavigationManager NavigationManager
@inject CreatureService CreatureService
@inject MinioService MinioService

@rendermode InteractiveServer

<PageTitle>@pageTitle</PageTitle>

<div class="max-w-7xl mx-auto px-2 py-4 font-sans">
    <div class="flex justify-between items-center mb-6 pb-2 border-b">
        <h1 class="text-xl font-semibold text-gray-800">@pageTitle</h1>
        <div class="flex space-x-3">
            <button @onclick="Cancel" class="px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 transition duration-150 ease-in-out shadow-sm">
                Отмена
            </button>
            <button @onclick="Save" class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition duration-150 ease-in-out shadow-sm">
                Сохранить
            </button>
        </div>
    </div>

    @if (isLoading)
    {
        <div class="flex justify-center items-center h-64">
            <div class="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500"></div>
        </div>
    }
    else
    {
        <div class="bg-white rounded-lg shadow-md p-4 border border-gray-200">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                <div>
                    <label for="name" class="block text-sm font-medium text-gray-700 mb-1">Название</label>
                    <input id="name" type="text" @bind="creature.Name" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                </div>
                
                <div>
                    <label for="type" class="block text-sm font-medium text-gray-700 mb-1">Тип</label>
                    <select id="type" @bind="creature.Type" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm">
                        @foreach (var type in Enum.GetValues<CreatureType>())
                        {
                            <option value="@type">@type.ToString()</option>
                        }
                    </select>
                </div>
            </div>

            <div class="mb-6">
                <label for="description" class="block text-sm font-medium text-gray-700 mb-1">Описание</label>
                <textarea id="description" @bind="creature.Description" rows="4" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm"></textarea>
            </div>

            <div class="mb-6">
                <label class="block text-sm font-medium text-gray-700 mb-1">Изображение существа</label>
                <div class="grid grid-cols-1 md:grid-cols-7 gap-4 items-start">
                    <div class="md:col-span-4 space-y-3">
                        <div>
                            <label for="imageUrl" class="block text-xs font-medium text-gray-600 mb-1">URL изображения</label>
                            <AutocompleteMinioImage @bind-Value="creature.ImageUrl" />
                        </div>
                        <div>
                            <label for="imageUpload" class="inline-flex items-center px-3 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 shadow-sm cursor-pointer">
                                <i class="fas fa-upload mr-2"></i>
                                <span>Выбрать файл...</span>
                            </label>
                            <InputFile id="imageUpload" OnChange="UploadImage" class="hidden" />
                            @if (!string.IsNullOrEmpty(selectedFileName)) 
                            {
                                <span class="ml-3 text-sm text-gray-500 align-middle">@selectedFileName</span>
                            }
                            else if (string.IsNullOrEmpty(creature.ImageUrl))
                            {
                                 <span class="ml-3 text-sm text-gray-500 align-middle">Файл не выбран</span>
                            }
                        </div>
                    </div>
                    <div class="md:col-span-3 mt-3 md:mt-0">
                        @if (!string.IsNullOrEmpty(creature.ImageUrl))
                        {
                            <img src="@GetImageUrl(creature.ImageUrl)" alt="Предпросмотр" class="max-h-48 w-full object-contain rounded-lg border border-gray-300 p-1 bg-gray-50" />
                        }
                        else
                        {
                            <div class="flex items-center justify-center h-48 border border-gray-300 rounded-lg bg-gray-50 text-gray-400 text-sm">
                                Предпросмотр изображения
                            </div>
                        }
                    </div>
                </div>
            </div>

            <h3 class="text-lg font-semibold text-gray-700 mb-3 border-b pb-2">Характеристики</h3>
            <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4 mb-6">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Сила</label>
                    <input type="number" @bind="creature.CreatureCharacteristics.Strength.Value" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                    <input type="text" @bind="creature.CreatureCharacteristics.Strength.DiceRoll" placeholder="2d6+1" class="w-full mt-1 px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Ловкость</label>
                    <input type="number" @bind="creature.CreatureCharacteristics.Dexterity.Value" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                    <input type="text" @bind="creature.CreatureCharacteristics.Dexterity.DiceRoll" placeholder="2d6+1" class="w-full mt-1 px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Интеллект</label>
                    <input type="number" @bind="creature.CreatureCharacteristics.Intelligence.Value" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                    <input type="text" @bind="creature.CreatureCharacteristics.Intelligence.DiceRoll" placeholder="2d6+1" class="w-full mt-1 px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Выносливость</label>
                    <input type="number" @bind="creature.CreatureCharacteristics.Constitution.Value" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                    <input type="text" @bind="creature.CreatureCharacteristics.Constitution.DiceRoll" placeholder="2d6+1" class="w-full mt-1 px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Наружность</label>
                    <input type="number" @bind="creature.CreatureCharacteristics.Appearance.Value" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                    <input type="text" @bind="creature.CreatureCharacteristics.Appearance.DiceRoll" placeholder="2d6+1" class="w-full mt-1 px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Мощь</label>
                    <input type="number" @bind="creature.CreatureCharacteristics.Power.Value" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                    <input type="text" @bind="creature.CreatureCharacteristics.Power.DiceRoll" placeholder="2d6+1" class="w-full mt-1 px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Телосложение</label>
                    <input type="number" @bind="creature.CreatureCharacteristics.Size.Value" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                    <input type="text" @bind="creature.CreatureCharacteristics.Size.DiceRoll" placeholder="2d6+1" class="w-full mt-1 px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Образование</label>
                    <input type="number" @bind="creature.CreatureCharacteristics.Education.Value" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                    <input type="text" @bind="creature.CreatureCharacteristics.Education.DiceRoll" placeholder="2d6+1" class="w-full mt-1 px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                </div>
            </div>

            <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4 mb-6">
                 <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Инициатива</label>
                    <input type="number" @bind="creature.CreatureCharacteristics.Initiative" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Ср. бонус к урону</label>
                    <input type="text" @bind="creature.CreatureCharacteristics.AverageBonusToHit" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Ср. комплекция</label>
                    <input type="number" @bind="creature.CreatureCharacteristics.AverageComplexity" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Скорость</label>
                    <input type="number" @bind="creature.CreatureCharacteristics.Speed" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">ПЗ</label>
                    <input type="number" @bind="creature.CreatureCharacteristics.HealPoint" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">ПМ</label>
                    <input type="number" @bind="creature.CreatureCharacteristics.ManaPoint" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Комплекция</label>
                    <input type="number" @bind="creature.CreatureCharacteristics.Constitutions" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                </div>
            </div>

            <h3 class="text-lg font-semibold text-gray-700 mb-3 border-b pb-2">Боевые умения</h3>
            <div class="mb-6 space-y-3">
                @foreach (var combat in combatDescriptions)
                {
                    <div class="flex space-x-3 items-start p-3 border rounded-lg">
                        <div class="flex-1 space-y-1">
                            <label class="block text-xs font-medium text-gray-600">Название</label>
                            <input type="text" @bind="combat.KeyText" placeholder="Название умения" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                        </div>
                        <div class="flex-1 space-y-1">
                             <label class="block text-xs font-medium text-gray-600">Описание</label>
                            <InitialSizeTextArea @bind-Value="combat.ValueText" InitialRows="3" placeholder="Описание умения" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                        </div>
                        <button @onclick="() => RemoveCombatDescription(combat)" class="p-2 mt-5 text-red-500 hover:text-red-700 hover:bg-red-100 rounded-full transition duration-150 ease-in-out" title="Удалить умение">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                            </svg>
                        </button>
                    </div>
                }
                <button @onclick="AddCombatDescription" class="mt-2 bg-green-500 hover:bg-green-600 text-white font-medium py-2 px-3 rounded-lg text-sm flex items-center shadow-sm">
                    <i class="fas fa-plus mr-2"></i>Добавить боевое умение
                </button>
            </div>

            <h3 class="text-lg font-semibold text-gray-700 mb-3 border-b pb-2">Особые умения</h3>
            <div class="space-y-3">
                @foreach (var ability in specialAbilities)
                {
                    <div class="flex space-x-3 items-start p-3 border rounded-lg">
                        <div class="flex-1 space-y-1">
                            <label class="block text-xs font-medium text-gray-600">Название</label>
                            <input type="text" @bind="ability.KeyText" placeholder="Название умения" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                        </div>
                        <div class="flex-1 space-y-1">
                            <label class="block text-xs font-medium text-gray-600">Описание</label>
                            <InitialSizeTextArea @bind-Value="ability.ValueText" InitialRows="3" placeholder="Описание умения" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 shadow-sm" />
                        </div>
                        <button @onclick="() => RemoveSpecialAbility(ability)" class="p-2 mt-5 text-red-500 hover:text-red-700 hover:bg-red-100 rounded-full transition duration-150 ease-in-out" title="Удалить умение">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                            </svg>
                        </button>
                    </div>
                }
                <button @onclick="AddSpecialAbility" class="mt-2 bg-green-500 hover:bg-green-600 text-white font-medium py-2 px-3 rounded-lg text-sm flex items-center shadow-sm">
                    <i class="fas fa-plus mr-2"></i>Добавить особое умение
                </button>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public Guid? Id { get; set; }
    
    private Creature creature = new()
    {
        Name = string.Empty,
        CreatureCharacteristics = new CreatureCharacteristics(),
        CombatDescriptions = new Dictionary<string, string>(),
        SpecialAbilities = new Dictionary<string, string>()
    };
    
    private List<DictionaryEntry> combatDescriptions = new();
    private List<DictionaryEntry> specialAbilities = new();
    private bool isLoading = true;
    private string pageTitle = "Новое существо";
    private IBrowserFile? uploadedImage;
    private string? selectedFileName;
    
    private class DictionaryEntry
    {
        public string KeyText { get; set; } = string.Empty;
        public string ValueText { get; set; } = string.Empty;
    }
    
    protected override async Task OnInitializedAsync()
    {
        if (Id.HasValue)
        {
            pageTitle = "Редактирование существа";
            await LoadCreature();
        }
        else
        {
            isLoading = false;
        }
    }
    
    private async Task LoadCreature()
    {
        try
        {
            var loadedCreature = await CreatureService.GetCreatureByIdAsync(Id!.Value);
                
            if (loadedCreature != null)
            {
                creature = loadedCreature;
                
                combatDescriptions = creature.CombatDescriptions?.Select(kv => 
                    new DictionaryEntry { KeyText = kv.Key, ValueText = kv.Value }).ToList() 
                    ?? new List<DictionaryEntry>();
                    
                specialAbilities = creature.SpecialAbilities?.Select(kv => 
                    new DictionaryEntry { KeyText = kv.Key, ValueText = kv.Value }).ToList() 
                    ?? new List<DictionaryEntry>();
            }
            else
            {
                NavigationManager.NavigateTo("/bestiary");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading creature: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }
    
    private void AddCombatDescription()
    {
        combatDescriptions.Add(new DictionaryEntry());
        StateHasChanged();
    }
    
    private void RemoveCombatDescription(DictionaryEntry item)
    {
        combatDescriptions.Remove(item);
        StateHasChanged();
    }
    
    private void AddSpecialAbility()
    {
        specialAbilities.Add(new DictionaryEntry());
        StateHasChanged();
    }
    
    private void RemoveSpecialAbility(DictionaryEntry item)
    {
        specialAbilities.Remove(item);
        StateHasChanged();
    }
    
    private async Task Save()
    {
        try
        {
            creature.CombatDescriptions = combatDescriptions
                .Where(entry => !string.IsNullOrWhiteSpace(entry.KeyText))
                .ToDictionary(entry => entry.KeyText, entry => entry.ValueText);
                
            creature.SpecialAbilities = specialAbilities
                .Where(entry => !string.IsNullOrWhiteSpace(entry.KeyText))
                .ToDictionary(entry => entry.KeyText, entry => entry.ValueText);
            
            bool success = false;
            
            if (Id.HasValue)
            {
                success = await CreatureService.UpdateCreatureAsync(creature);
            }
            else
            {
                var createdCreature = await CreatureService.CreateCreatureAsync(creature);
                success = createdCreature != null;
                
                if (success)
                {
                    creature = createdCreature!;
                    Id = creature.Id; // Set the Id parameter to the new ID
                }
            }
            
            if (success)
            {
                if (uploadedImage != null)
                {
                    await UploadImageToServer();
                }
                
                NavigationManager.NavigateTo("/bestiary");
            }
            else
            {
                Console.WriteLine("Error saving creature");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error saving creature: {ex.Message}");
        }
    }
    
    private void Cancel()
    {
        NavigationManager.NavigateTo("/bestiary");
    }
    
    private async Task UploadImage(InputFileChangeEventArgs e)
    {
        uploadedImage = e.File;
        selectedFileName = e.File.Name;
        
        if (uploadedImage != null)
        {
            var imageStream = uploadedImage.OpenReadStream(maxAllowedSize: 10485760); // 10MB
            var buffer = new byte[uploadedImage.Size];
            await imageStream.ReadAsync(buffer);
            
            creature.ImageUrl = $"temp-{Guid.NewGuid()}.jpg";
        }
    }
    
    private async Task UploadImageToServer()
    {
        if (uploadedImage == null) return;
        
        try
        {
            var fileName = $"images/beasts/{creature.Name.ToLower().Replace(" ", "-")}.jpg";
            var stream = uploadedImage.OpenReadStream(maxAllowedSize: 10485760); // 10MB
            
            await MinioService.UploadAsync(
                stream, 
                fileName, 
                "images", 
                uploadedImage.ContentType);
            
            creature.ImageUrl = fileName;
            await CreatureService.UpdateCreatureAsync(creature);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error uploading image: {ex.Message}");
        }
    }
    
    private string GetImageUrl(string? imageUrl)
    {
        if (string.IsNullOrEmpty(imageUrl))
            return string.Empty;

        if (imageUrl.StartsWith("http://") || imageUrl.StartsWith("https://"))
            return imageUrl;

        return $"/api/minio/image/{imageUrl}";
    }
}
