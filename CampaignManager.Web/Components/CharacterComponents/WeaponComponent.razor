@using CampaignManager.Web.Model
@using CampaignManager.Web.Weapons
@using CampaignManager.Web.Extensions
@inject WeaponService WeaponService

<div class="bg-white shadow rounded-lg p-4 mb-4">
    <h3 class="text-xl font-bold mb-4">Оружие</h3>

    <!-- Responsive Weapons Table with card layout on mobile -->
    <div class="overflow-x-auto mb-4">
        @if (Character.Weapons.Any())
        {
            <!-- Mobile view (cards) -->
            <div class="md:hidden">
                @foreach (var weapon in Character.Weapons)
                {
                    <div class="bg-gray-50 rounded p-3 mb-3 shadow-sm">
                        <div class="flex justify-between mb-2">
                            <div class="font-semibold">
                                <input type="text" @bind="weapon.Name" class="w-full p-1 border border-gray-300 rounded"
                                       placeholder="Оружие"/>
                            </div>
                            <button @onclick="() => RemoveWeapon(weapon)" class="text-red-600 hover:text-red-900 p-1">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24"
                                     stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                          d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                                </svg>
                            </button>
                        </div>
                        <div class="grid grid-cols-2 gap-2">
                            <div>
                                <label class="block text-xs text-gray-500 mb-1">Навык</label>
                                <input type="text" @bind="weapon.Skill"
                                       class="w-full p-1 border border-gray-300 rounded text-sm"/>
                            </div>
                            <div>
                                <label class="block text-xs text-gray-500 mb-1">Урон</label>
                                <input type="text" @bind="weapon.Damage"
                                       class="w-full p-1 border border-gray-300 rounded text-sm"/>
                            </div>
                            <div>
                                <label class="block text-xs text-gray-500 mb-1">Дальность</label>
                                <input type="text" @bind="weapon.Range"
                                       class="w-full p-1 border border-gray-300 rounded text-sm"/>
                            </div>
                            <div>
                                <label class="block text-xs text-gray-500 mb-1">Атаки</label>
                                <input type="text" @bind="weapon.Attacks"
                                       class="w-full p-1 border border-gray-300 rounded text-sm"/>
                            </div>
                            <div>
                                <label class="block text-xs text-gray-500 mb-1">Цена</label>
                                <input type="text" @bind="weapon.Cost"
                                       class="w-full p-1 border border-gray-300 rounded text-sm"/>
                            </div>
                            <div>
                                <label class="block text-xs text-gray-500 mb-1">Примечания</label>
                                <input type="text" @bind="weapon.Notes"
                                       class="w-full p-1 border border-gray-300 rounded text-sm"/>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Desktop view (table) -->
            <div class="hidden md:block">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                    <tr>
                        <th scope="col" class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Оружие</th>
                        <th scope="col" class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Навык</th>
                        <th scope="col" class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Урон</th>
                        <th scope="col" class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Дальность</th>
                        <th scope="col" class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Атаки</th>
                        <th scope="col" class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Цена</th>
                        <th scope="col" class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Примечания</th>
                        <th scope="col" class="px-3 py-2 text-center text-xs font-medium text-gray-500 uppercase tracking-wider w-16">Действия</th>
                    </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                    @foreach (var weapon in Character.Weapons)
                    {
                        <tr>
                            <td class="px-3 py-2 whitespace-nowrap text-sm">
                                <input type="text" @bind="weapon.Name" class="w-full p-1 border border-gray-300 rounded"/>
                            </td>
                            <td class="px-3 py-2 whitespace-nowrap text-sm">
                                <input type="text" @bind="weapon.Skill" class="w-full p-1 border border-gray-300 rounded"/>
                            </td>
                            <td class="px-3 py-2 whitespace-nowrap text-sm">
                                <input type="text" @bind="weapon.Damage" class="w-full p-1 border border-gray-300 rounded"/>
                            </td>
                            <td class="px-3 py-2 whitespace-nowrap text-sm">
                                <input type="text" @bind="weapon.Range" class="w-full p-1 border border-gray-300 rounded"/>
                            </td>
                            <td class="px-3 py-2 whitespace-nowrap text-sm">
                                <input type="text" @bind="weapon.Attacks" class="w-full p-1 border border-gray-300 rounded"/>
                            </td>
                            <td class="px-3 py-2 whitespace-nowrap text-sm">
                                <input type="text" @bind="weapon.Cost" class="w-full p-1 border border-gray-300 rounded"/>
                            </td>
                            <td class="px-3 py-2 whitespace-nowrap text-sm">
                                <input type="text" @bind="weapon.Notes" class="w-full p-1 border border-gray-300 rounded"/>
                            </td>
                            <td class="px-3 py-2 whitespace-nowrap text-sm text-center">
                                <button @onclick="() => RemoveWeapon(weapon)" class="text-red-600 hover:text-red-900 p-1">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24"
                                         stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                              d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                                    </svg>
                                </button>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center text-gray-500 py-4">
                Нет добавленного оружия
            </div>
        }
    </div>

    <!-- Compact add weapon form -->
    <div class="bg-gray-50 p-3 rounded-md mb-3">
        <details class="w-full">
            <summary class="font-semibold cursor-pointer mb-2">Добавить новое оружие</summary>
            
            <!-- Фильтры для поиска оружия -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-2 mb-3">
                <div>
                    <label class="block text-xs text-gray-500 mb-1">Тип оружия</label>
                    <select @bind="selectedWeaponType" class="w-full p-2 border border-gray-300 rounded">
                        <option value="">Все типы</option>
                        @foreach (var typeValue in EnumExtensions.GetWeaponTypes())
                        {
                            <option value="@typeValue">@typeValue.ToRussianString()</option>
                        }
                    </select>
                </div>
                
                <!-- Эпоха -->
                <div>
                    <label class="block text-xs text-gray-500 mb-1">Эпоха</label>
                    <div class="flex flex-wrap items-center gap-2 mt-1">
                        <div class="flex items-center">
                            <input type="checkbox" id="is1920Filter" 
                                   checked="@is1920Filter"
                                   @onchange="@(e => { is1920Filter = (bool)e.Value!; FilterSuggestedWeapons(); })"
                                   class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"/>
                            <label for="is1920Filter" class="ml-1 text-xs text-gray-700">1920-е</label>
                        </div>
                        <div class="flex items-center">
                            <input type="checkbox" id="isModernFilter" 
                                   checked="@isModernFilter"
                                   @onchange="@(e => { isModernFilter = (bool)e.Value!; FilterSuggestedWeapons(); })"
                                   class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"/>
                            <label for="isModernFilter" class="ml-1 text-xs text-gray-700">Современное</label>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Поле поиска оружия -->
            <div class="mb-3">
                <label class="block text-xs text-gray-500 mb-1">Название оружия</label>
                <div class="relative">
                    <input type="text" value="@newWeapon.Name" @oninput="OnWeaponNameInput" 
                           placeholder="Название оружия"
                           class="w-full p-2 border border-gray-300 rounded"/>
                    @if (suggestedWeapons.Count > 0)
                    {
                        <div class="absolute z-10 w-full bg-white border border-gray-300 rounded-b shadow-lg max-h-60 overflow-y-auto">
                            @foreach (var weapon in suggestedWeapons)
                            {
                                <div class="p-2 hover:bg-gray-100 cursor-pointer" @onclick="() => SelectWeapon(weapon)">
                                    @weapon.Name
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>

            <div class="grid grid-cols-2 md:grid-cols-6 gap-2 mb-2">
                <div>
                    <input type="text" @bind="newWeapon.Skill" placeholder="Навык"
                           class="w-full p-1 border border-gray-300 rounded text-sm"/>
                </div>
                <div>
                    <input type="text" @bind="newWeapon.Damage" placeholder="Урон"
                           class="w-full p-1 border border-gray-300 rounded text-sm"/>
                </div>
                <div>
                    <input type="text" @bind="newWeapon.Range" placeholder="Дальность"
                           class="w-full p-1 border border-gray-300 rounded text-sm"/>
                </div>
                <div>
                    <input type="text" @bind="newWeapon.Attacks" placeholder="Атаки"
                           class="w-full p-1 border border-gray-300 rounded text-sm"/>
                </div>
                <div>
                    <input type="text" @bind="newWeapon.Ammo" placeholder="Патроны"
                           class="w-full p-1 border border-gray-300 rounded text-sm"/>
                </div>
                <div>
                    <input type="text" @bind="newWeapon.Malfunction" placeholder="Осечка"
                           class="w-full p-1 border border-gray-300 rounded text-sm"/>
                </div>
                <div>
                    <input type="text" @bind="newWeapon.Notes" placeholder="Примечания"
                           class="w-full p-1 border border-gray-300 rounded text-sm"/>
                </div>
            </div>
            
            <button @onclick="AddWeapon"
                    class="w-full bg-blue-500 hover:bg-blue-600 text-white font-bold py-1 px-4 rounded text-sm">
                Добавить
            </button>
        </details>
    </div>
</div>

@code {
    [Parameter] public Character Character { get; set; } = null!;

    private Weapon newWeapon = new();

    
    // Фильтры оружия
    private string? selectedWeaponType = "";
    private bool is1920Filter = true;
    private bool isModernFilter = false;

    private List<Weapon> suggestedWeapons = new();
    private List<Weapon> allWeapons = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        allWeapons = await WeaponService.GetAllWeaponsAsync();
    }

    private async Task OnWeaponNameInput(ChangeEventArgs e)
    {
        var value = e.Value?.ToString() ?? "";
        newWeapon.Name = value;

        if (string.IsNullOrEmpty(value))
        {
            suggestedWeapons.Clear();
            newWeapon = new Weapon();
            return;
        }

        FilterSuggestedWeapons();
    }

    private void FilterSuggestedWeapons()
    {
        var query = allWeapons.AsQueryable();
        
        // Фильтр по типу оружия
        if (!string.IsNullOrEmpty(selectedWeaponType) && Enum.TryParse<WeaponType>(selectedWeaponType, out var typeValue))
        {
            query = query.Where(w => w.Type == typeValue);
        }
        
        // Фильтр по эпохе
        if (is1920Filter && !isModernFilter)
        {
            query = query.Where(w => w.Is1920);
        }
        else if (!is1920Filter && isModernFilter)
        {
            query = query.Where(w => w.IsModern);
        }
        else if (is1920Filter && isModernFilter)
        {
            query = query.Where(w => w.Is1920 || w.IsModern);
        }
        
        // Фильтр по названию
        if (!string.IsNullOrWhiteSpace(newWeapon.Name))
        {
            query = query.Where(w => w.Name.Contains(newWeapon.Name, StringComparison.OrdinalIgnoreCase));
        }
        
        suggestedWeapons = query.Take(5).ToList();
    }

    private void SelectWeapon(Weapon weapon)
    {
        newWeapon = weapon;
        suggestedWeapons.Clear();
    }

    private void AddWeapon()
    {
        if (string.IsNullOrWhiteSpace(newWeapon.Name)) 
            return;
        Character.Weapons.Add(newWeapon);

        newWeapon = new Weapon();
    }

    private void RemoveWeapon(Weapon weapon)
    {
        Character.Weapons.Remove(weapon);
    }
}
