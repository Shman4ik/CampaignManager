@using CampaignManager.Web.Model
@using CampaignManager.Web.Weapons
@using CampaignManager.Web.Extensions
@inject WeaponService WeaponService

<div class="bg-white shadow rounded-lg p-4 mb-4">
    <h3 class="text-xl font-bold mb-4">Оружие</h3>

    <!-- Weapons List with Accordion -->
    <div class="overflow-x-auto mb-4">
        @if (Character.Weapons.Any())
        {
            <div class="bg-white rounded-lg overflow-hidden border border-gray-200">
                <table class="w-full text-sm">
                    <thead>
                        <tr class="bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            <th class="px-3 py-2"></th>
                            <th class="px-3 py-2">Название</th>
                            <th class="px-3 py-2">Урон</th>
                            <th class="px-3 py-2">Дальность</th>
                            <th class="px-3 py-2">Атаки</th>
                            <th class="px-3 py-2 text-center">Действия</th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-200">
                        @foreach (var weapon in Character.Weapons)
                        {
                            <tr class="hover:bg-gray-50 cursor-pointer" @onclick="() => ToggleWeaponDetails(weapon)">
                                 <td class="px-3 py-2 whitespace-nowrap">
                                    <button @onclick:stopPropagation="true" @onclick="() => ToggleWeaponDetails(weapon)"
                                            class="text-blue-600 hover:text-blue-800 text-xs flex items-center mr-2">
                                        <i class="fas @(expandedWeaponId == weapon.Id ? "fa-chevron-up" : "fa-chevron-down")"></i>
                                    </button>
                                </td>
                                <td class="px-3 py-2 whitespace-nowrap">                                   
                                    <input type="text" @bind="weapon.Name" @onclick:stopPropagation
                                           class="w-full p-1 border border-gray-300 rounded text-sm" />
                                </td>
                                <td class="px-3 py-2 whitespace-nowrap">
                                    <input type="text" @bind="weapon.Damage" @onclick:stopPropagation
                                           class="w-full p-1 border border-gray-300 rounded text-sm" />
                                </td>
                                <td class="px-3 py-2 whitespace-nowrap">
                                    <input type="text" @bind="weapon.Range" @onclick:stopPropagation
                                           class="w-full p-1 border border-gray-300 rounded text-sm" />
                                </td>
                                <td class="px-3 py-2 whitespace-nowrap">
                                    <input type="text" @bind="weapon.Attacks" @onclick:stopPropagation
                                           class="w-full p-1 border border-gray-300 rounded text-sm" />
                                </td>
                                <td class="px-3 py-2 whitespace-nowrap text-center">
                                    <div class="flex justify-center space-x-2">
                                        <button @onclick:stopPropagation="true" @onclick="() => RemoveWeapon(weapon)" 
                                                class="text-red-600 hover:text-red-900 p-1">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24"
                                                 stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                      d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                            </svg>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                            @if (expandedWeaponId == weapon.Id)
                            {
                                <tr>
                                    <td colspan="5" class="px-3 py-2 bg-gray-50">
                                        <div class="grid grid-cols-1 md:grid-cols-3 gap-3 p-2">
                                            <div>
                                                <label class="block text-xs text-gray-500 mb-1">Тип оружия</label>
                                                <select @bind="weapon.Type" class="w-full p-1 border border-gray-300 rounded text-sm">
                                                    @foreach (var typeValue in EnumExtensions.GetWeaponTypes())
                                                    {
                                                        <option value="@typeValue">@typeValue.ToRussianString()</option>
                                                    }
                                                </select>
                                            </div>
                                            <div>
                                                <label class="block text-xs text-gray-500 mb-1">Навык</label>
                                                <input type="text" @bind="weapon.Skill"
                                                       class="w-full p-1 border border-gray-300 rounded text-sm" />
                                            </div>
                                            <div>
                                                <label class="block text-xs text-gray-500 mb-1">Цена</label>
                                                <input type="text" @bind="weapon.Cost"
                                                       class="w-full p-1 border border-gray-300 rounded text-sm" />
                                            </div>
                                            <div>
                                                <label class="block text-xs text-gray-500 mb-1">Патроны</label>
                                                <input type="text" @bind="weapon.Ammo"
                                                       class="w-full p-1 border border-gray-300 rounded text-sm" />
                                            </div>
                                            <div>
                                                <label class="block text-xs text-gray-500 mb-1">Осечка</label>
                                                <input type="text" @bind="weapon.Malfunction"
                                                       class="w-full p-1 border border-gray-300 rounded text-sm" />
                                            </div>
                                            <div>
                                                <label class="block text-xs text-gray-500 mb-1">Примечания</label>
                                                <input type="text" @bind="weapon.Notes"
                                                       class="w-full p-1 border border-gray-300 rounded text-sm" />
                                            </div>
                                            <div class="flex items-center space-x-2">
                                                <div class="flex items-center">
                                                    <input id="is1920-@weapon.Id" type="checkbox" @bind="weapon.Is1920"
                                                           class="h-4 w-4 text-blue-600 border-gray-300 rounded" />
                                                    <label for="is1920-@weapon.Id" class="ml-2 text-xs text-gray-700">1920-е</label>
                                                </div>
                                                <div class="flex items-center">
                                                    <input id="isModern-@weapon.Id" type="checkbox" @bind="weapon.IsModern"
                                                           class="h-4 w-4 text-blue-600 border-gray-300 rounded" />
                                                    <label for="isModern-@weapon.Id" class="ml-2 text-xs text-gray-700">Современное</label>
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center text-gray-500 py-4">
                Нет добавленного оружия
            </div>
        }
    </div>

    <!-- Compact add weapon form -->
    <div class="bg-gray-50 p-3 rounded-md mb-3">
        <details class="group">
            <summary class="flex justify-between items-center cursor-pointer">
                <span class="text-sm font-medium text-gray-700">Добавить оружие</span>
                <span class="transition group-open:rotate-180">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24"
                         stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                    </svg>
                </span>
            </summary>
            <div class="mt-3 grid grid-cols-1 md:grid-cols-2 gap-2">
                <div class="md:col-span-2 relative">
                    <input type="text" @bind="newWeapon.Name" @oninput="OnWeaponNameInput" placeholder="Название оружия"
                           class="w-full p-1 border border-gray-300 rounded text-sm" />
                    @if (suggestedWeapons.Any())
                    {
                        <div class="absolute z-10 mt-1 w-full bg-white border border-gray-300 rounded-md shadow-lg max-h-60 overflow-auto">
                            @foreach (var weapon in suggestedWeapons)
                            {
                                <div @onclick="() => SelectWeapon(weapon)"
                                     class="px-3 py-2 hover:bg-gray-100 cursor-pointer text-sm">
                                    @weapon.Name
                                </div>
                            }
                        </div>
                    }
                </div>

                <div>
                    <select @bind="selectedWeaponType" class="w-full p-1 border border-gray-300 rounded text-sm">
                        <option value="">Все типы оружия</option>
                        @foreach (var typeValue in EnumExtensions.GetWeaponTypes())
                        {
                            <option value="@typeValue">@typeValue.ToRussianString()</option>
                        }
                    </select>
                </div>

                <div class="flex items-center space-x-4">
                    <div class="flex items-center">
                        <input id="is1920" type="checkbox" @bind="is1920Filter" class="h-4 w-4 text-blue-600 border-gray-300 rounded" />
                        <label for="is1920" class="ml-2 text-xs text-gray-700">1920-е</label>
                    </div>
                    <div class="flex items-center">
                        <input id="isModern" type="checkbox" @bind="isModernFilter" class="h-4 w-4 text-blue-600 border-gray-300 rounded" />
                        <label for="isModern" class="ml-2 text-xs text-gray-700">Современное</label>
                    </div>
                </div>

                <div>
                    <input type="text" @bind="newWeapon.Skill" placeholder="Навык"
                           class="w-full p-1 border border-gray-300 rounded text-sm" />
                </div>
                <div>
                    <input type="text" @bind="newWeapon.Damage" placeholder="Урон"
                           class="w-full p-1 border border-gray-300 rounded text-sm" />
                </div>
                <div>
                    <input type="text" @bind="newWeapon.Range" placeholder="Дальность"
                           class="w-full p-1 border border-gray-300 rounded text-sm" />
                </div>
                <div>
                    <input type="text" @bind="newWeapon.Attacks" placeholder="Атаки"
                           class="w-full p-1 border border-gray-300 rounded text-sm" />
                </div>
                <div>
                    <input type="text" @bind="newWeapon.Ammo" placeholder="Патроны"
                           class="w-full p-1 border border-gray-300 rounded text-sm" />
                </div>
                <div>
                    <input type="text" @bind="newWeapon.Malfunction" placeholder="Осечка"
                           class="w-full p-1 border border-gray-300 rounded text-sm" />
                </div>
                <div>
                    <input type="text" @bind="newWeapon.Notes" placeholder="Примечания"
                           class="w-full p-1 border border-gray-300 rounded text-sm" />
                </div>
            </div>
            
            <button @onclick="AddWeapon"
                    class="w-full bg-blue-500 hover:bg-blue-600 text-white font-bold py-1 px-4 rounded text-sm mt-3">
                Добавить
            </button>
        </details>
    </div>
</div>

@code {
    [Parameter] public Character Character { get; set; } = null!;

    private Weapon newWeapon = new();
    private Guid? expandedWeaponId;
    
    // Фильтры оружия
    private string? selectedWeaponType = "";
    private bool is1920Filter = true;
    private bool isModernFilter = false;

    private List<Weapon> suggestedWeapons = new();
    private List<Weapon> allWeapons = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        allWeapons = await WeaponService.GetAllWeaponsAsync();
    }

    private void ToggleWeaponDetails(Weapon weapon)
    {
        if (expandedWeaponId == weapon.Id)
        {
            expandedWeaponId = null;
        }
        else
        {
            expandedWeaponId = weapon.Id;
        }
    }

    private async Task OnWeaponNameInput(ChangeEventArgs e)
    {
        var value = e.Value?.ToString() ?? "";
        newWeapon.Name = value;

        if (string.IsNullOrEmpty(value))
        {
            suggestedWeapons.Clear();
            newWeapon = new Weapon();
            return;
        }

        FilterSuggestedWeapons();
    }

    private void FilterSuggestedWeapons()
    {
        var query = allWeapons.AsQueryable();
        
        // Фильтр по типу оружия
        if (!string.IsNullOrEmpty(selectedWeaponType) && Enum.TryParse<WeaponType>(selectedWeaponType, out var typeValue))
        {
            query = query.Where(w => w.Type == typeValue);
        }
        
        // Фильтр по эпохе
        if (is1920Filter && !isModernFilter)
        {
            query = query.Where(w => w.Is1920);
        }
        else if (!is1920Filter && isModernFilter)
        {
            query = query.Where(w => w.IsModern);
        }
        else if (is1920Filter && isModernFilter)
        {
            query = query.Where(w => w.Is1920 || w.IsModern);
        }
        
        // Фильтр по названию
        if (!string.IsNullOrWhiteSpace(newWeapon.Name))
        {
            query = query.Where(w => w.Name.Contains(newWeapon.Name, StringComparison.OrdinalIgnoreCase));
        }
        
        suggestedWeapons = query.Take(5).ToList();
    }

    private void SelectWeapon(Weapon weapon)
    {
        newWeapon = weapon;
        suggestedWeapons.Clear();
    }

    private void AddWeapon()
    {
        if (string.IsNullOrWhiteSpace(newWeapon.Name)) 
            return;
        Character.Weapons.Add(newWeapon);

        newWeapon = new Weapon();
    }

    private void RemoveWeapon(Weapon weapon)
    {
        Character.Weapons.Remove(weapon);
    }
}
