@using CampaignManager.Web.Model

<div class="flex flex-col md:flex-row md:gap-4">
    <div class="flex-1">
        <table class="w-full text-sm mb-2">
            <thead>
                <tr>
                    <th class="text-left"></th>
                    <th class="w-10 text-center font-semibold whitespace-nowrap">Обычный</th>
                    <th class="w-10 text-center font-semibold whitespace-nowrap">Трудный</th>
                    <th class="w-10 text-center font-semibold whitespace-nowrap">Чрезвыч.</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var prop in typeof(Characteristics).GetProperties())
                {
                    var value = (AttributeValue)prop.GetValue(Characteristics);
                    <tr>
                        <td class="py-0.5">
                            <span class="font-medium hidden xl:block">@GetFullName(prop.Name)</span>
                            <span class="font-medium xl:hidden">@GetShortName(prop.Name)</span>
                        </td>
                        <td class="py-0.5">
                            <input type="number" @bind="value.Regular" @bind:event="oninput"
                                   @onchange="() => OnUpdate.InvokeAsync(value)"
                                   class="w-full min-w-10 p-0.5 text-center border border-gray-300 rounded" />
                        </td>
                        <td class="py-0.5">
                            <input type="number" value="@value.Half" disabled
                                   class="w-full min-w-10 p-0.5 text-center bg-gray-100 border border-gray-300 rounded" />
                        </td>
                        <td class="py-0.5">
                            <input type="number" value="@value.Fifth" disabled
                                   class="w-full min-w-10 p-0.5 text-center bg-gray-100 border border-gray-300 rounded" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    [Parameter] public Characteristics Characteristics { get; set; }
    [Parameter] public EventCallback<AttributeValue> OnUpdate { get; set; }

    private string GetFullName(string fullName)
    {
        var russianNames = new Dictionary<string, string>
        {
            { "Strength", "Сила" },
            { "Constitution", "Выносливость" },
            { "Size", "Телосложение" },
            { "Dexterity", "Ловкость" },
            { "Appearance", "Наружность" },
            { "Intelligence", "Интеллект" },
            { "Power", "Мощь" },
            { "Education", "Образование" }
        };

        return russianNames.TryGetValue(fullName, out var russianName) ? russianName : fullName;
    }

    // Keep this method for backward compatibility
    private string GetShortName(string fullName)
    {
        var shortNames = new Dictionary<string, string>
        {
            { "Strength", "СИЛ" },
            { "Constitution", "ВЫН" },
            { "Size", "ТЕЛ" },
            { "Dexterity", "ЛВК" },
            { "Appearance", "НАР" },
            { "Intelligence", "ИНТ" },
            { "Power", "МОЩ" },
            { "Education", "ОБР" }
        };

        return shortNames.TryGetValue(fullName, out var shortName) ? shortName : fullName;
    }
}