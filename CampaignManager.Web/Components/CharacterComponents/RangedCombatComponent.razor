@using CampaignManager.Web.Model

<div class="bg-white shadow rounded-lg p-4 mb-4">
    <h3 class="text-xl font-bold mb-4">Оружие дальнего боя</h3>
    
    <div class="mb-4">
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th scope="col" class="px-2 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Оружие</th>
                        <th scope="col" class="px-2 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Шанс</th>
                        <th scope="col" class="px-2 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Урон</th>
                        <th scope="col" class="px-2 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Дальн.</th>
                        <th scope="col" class="px-2 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Атаки</th>
                        <th scope="col" class="px-2 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Патроны</th>
                        <th scope="col" class="px-2 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Неиспр.</th>
                        <th scope="col" class="px-2 py-2 text-xs font-medium text-gray-500 uppercase tracking-wider w-16">Действия</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    @foreach (var weapon in Character.RangedCombat.Weapons)
                    {
                        <tr>
                            <td class="px-2 py-2 whitespace-nowrap text-sm text-gray-900">
                                <input type="text" @bind="weapon.Name" class="w-full p-1 border border-gray-300 rounded" />
                            </td>
                            <td class="px-2 py-2 whitespace-nowrap text-sm text-gray-900">
                                <input type="text" @bind="weapon.HitChance" class="w-full p-1 border border-gray-300 rounded" />
                            </td>
                            <td class="px-2 py-2 whitespace-nowrap text-sm text-gray-900">
                                <input type="text" @bind="weapon.Damage" class="w-full p-1 border border-gray-300 rounded" />
                            </td>
                            <td class="px-2 py-2 whitespace-nowrap text-sm text-gray-900">
                                <input type="text" @bind="weapon.Range" class="w-full p-1 border border-gray-300 rounded" />
                            </td>
                            <td class="px-2 py-2 whitespace-nowrap text-sm text-gray-900">
                                <input type="text" @bind="weapon.Attacks" class="w-full p-1 border border-gray-300 rounded" />
                            </td>
                            <td class="px-2 py-2 whitespace-nowrap text-sm text-gray-900">
                                <input type="text" @bind="weapon.Ammo" class="w-full p-1 border border-gray-300 rounded" />
                            </td>
                            <td class="px-2 py-2 whitespace-nowrap text-sm text-gray-900">
                                <input type="text" @bind="weapon.Malfunction" class="w-full p-1 border border-gray-300 rounded" />
                            </td>
                            <td class="px-2 py-2 whitespace-nowrap text-right text-sm font-medium">
                                <button @onclick="() => RemoveWeapon(weapon)" class="text-red-600 hover:text-red-900 p-1">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                    </svg>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-7 gap-2 mb-2">
        <input type="text" @bind="newWeaponName" placeholder="Оружие" class="p-1 border border-gray-300 rounded" />
        <input type="text" @bind="newWeaponHitChance" placeholder="Шанс" class="p-1 border border-gray-300 rounded" />
        <input type="text" @bind="newWeaponDamage" placeholder="Урон" class="p-1 border border-gray-300 rounded" />
        <input type="text" @bind="newWeaponRange" placeholder="Дальность" class="p-1 border border-gray-300 rounded" />
        <input type="text" @bind="newWeaponAttacks" placeholder="Атаки" class="p-1 border border-gray-300 rounded" />
        <input type="text" @bind="newWeaponAmmo" placeholder="Патроны" class="p-1 border border-gray-300 rounded" />
        <input type="text" @bind="newWeaponMalfunction" placeholder="Неисправность" class="p-1 border border-gray-300 rounded" />
    </div>
    
    <button @onclick="AddWeapon" class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded">
        Добавить оружие
    </button>
</div>

@code {
    [Parameter] public Character Character { get; set; } = null!;
    
    private string newWeaponName = "";
    private string newWeaponHitChance = "";
    private string newWeaponDamage = "";
    private string newWeaponRange = "";
    private string newWeaponAttacks = "";
    private string newWeaponAmmo = "";
    private string newWeaponMalfunction = "";
    
    private void AddWeapon()
    {
        if (!string.IsNullOrWhiteSpace(newWeaponName))
        {
            Character.RangedCombat.Weapons.Add(new RangedCombatWeapon 
            { 
                Name = newWeaponName,
                HitChance = newWeaponHitChance,
                Damage = newWeaponDamage,
                Range = newWeaponRange,
                Attacks = newWeaponAttacks,
                Ammo = newWeaponAmmo,
                Malfunction = newWeaponMalfunction
            });
            
            newWeaponName = "";
            newWeaponHitChance = "";
            newWeaponDamage = "";
            newWeaponRange = "";
            newWeaponAttacks = "";
            newWeaponAmmo = "";
            newWeaponMalfunction = "";
        }
    }
    
    private void RemoveWeapon(RangedCombatWeapon weapon)
    {
        Character.RangedCombat.Weapons.Remove(weapon);
    }
}
