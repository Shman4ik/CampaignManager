@page "/campaign/{CampaignId:guid}/invite"
@using CampaignManager.Web.Model
@using CampaignManager.Web.Services
@using Microsoft.AspNetCore.Components.Authorization
@inject CampaignCharacterService CampaignCharacterService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject CampaignService CampaignService
@rendermode InteractiveServer

<PageTitle>Пригласить игрока</PageTitle>

<div class="max-w-md mx-auto py-6 sm:px-6 lg:px-8">
    <div class="px-4 py-6 sm:px-0">
        <h1 class="text-2xl font-bold text-gray-900 mb-6">Пригласить игрока в кампанию</h1>

        <div class="bg-white shadow-md rounded-lg p-6">
            @if (Campaign == null)
            {
                <p class="text-gray-500">Загрузка данных кампании...</p>
            }
            else
            {
                <div class="mb-6">
                    <h2 class="text-lg font-medium text-gray-800 mb-2">Кампания: @Campaign.Name</h2>
                    <p class="text-sm text-gray-600">Участников: @Campaign.Players.Count / 5</p>
                </div>

                <div class="mb-6">
                    <label for="email" class="block text-sm font-medium text-gray-700 mb-1">
                        Email игрока для приглашения
                    </label>
                    <input type="email" id="email" @bind="InviteEmail"
                           class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                           placeholder="email@example.com" />
                </div>

                <div class="mb-4">
                    <button @onclick="InvitePlayer"
                            class="w-full bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded">
                        Отправить приглашение
                    </button>
                </div>

                <div class="mb-4">
                    <button @onclick="GoBack"
                            class="w-full bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded">
                        Вернуться к кампании
                    </button>
                </div>

                @if (!string.IsNullOrEmpty(Message))
                {
                    <div class="mt-4 p-3 rounded @MessageCssClass">
                        @Message
                    </div>
                }
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Guid CampaignId { get; set; }

    private Campaign Campaign;
    private string InviteEmail = "";
    private string Message = "";
    private string MessageCssClass = "";

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var currentUserId = authState.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;

        Campaign = await CampaignCharacterService.GetCampaignAsync(CampaignId);

        // Check if current user is the keeper
        if (Campaign != null && Campaign.KeeperId != currentUserId)
        {
            NavigationManager.NavigateTo($"/campaign/{CampaignId}");
        }
    }

    private async Task InvitePlayer()
    {
        if (string.IsNullOrWhiteSpace(InviteEmail))
        {
            SetErrorMessage("Пожалуйста, введите email игрока");
            return;
        }

        // In a real implementation, this would send an invitation or check if the user exists
        // For this example, we'll try to add them directly
        try
        {
            var success = await CampaignService.ApplyToCompanyAsync(CampaignId, InviteEmail);
            if (success)
            {
                SetSuccessMessage($"Игрок {InviteEmail} успешно добавлен в кампанию");
                InviteEmail = "";

                // Refresh campaign data
                Campaign = await CampaignCharacterService.GetCampaignAsync(CampaignId);
            }
            else
            {
                SetErrorMessage("Не удалось добавить игрока. Возможно, игрок уже в кампании или не зарегистрирован в системе.");
            }
        }
        catch (Exception ex)
        {
            SetErrorMessage($"Ошибка: {ex.Message}");
        }
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo($"/campaign/{CampaignId}");
    }

    private void SetSuccessMessage(string message)
    {
        Message = message;
        MessageCssClass = "bg-green-50 text-green-800 border border-green-200";
    }

    private void SetErrorMessage(string message)
    {
        Message = message;
        MessageCssClass = "bg-red-50 text-red-800 border border-red-200";
    }
}