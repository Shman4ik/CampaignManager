@using System.Security.Claims
@using CampaignManager.Web.Model
@using CampaignManager.Web.Utilities.Services

@inject CampaignService CampaignService
@inject IdentityService UserInformationService
@inject NavigationManager NavigationManager

@rendermode InteractiveServer

<div class="mb-8">
    <h3 class="text-2xl font-bold mb-4">Ваши кампании</h3>
    @if (!IsUserAuthenticated)
    {
        <div class="bg-blue-50 border-l-4 border-blue-500 p-4 mb-4">
            <p class="text-blue-700">Войдите в систему, чтобы увидеть свои кампании и присоединиться к новым.</p>
        </div>
    }
    else if (UserCampaigns == null)
    {
        <p>Загрузка кампаний...</p>
    }
    else if (UserCampaigns.Count == 0)
    {
        <p>У вас пока нет доступных кампаний.</p>
    }
    else
    {
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-4">
            @foreach (var campaign in UserCampaigns)
            {
                <div class="bg-white shadow-md rounded-lg p-4">
                    <h4 class="text-xl font-semibold mb-2">@campaign.Name</h4>
                    <div class="text-gray-600 mb-4">
                        <span class="font-medium">Мастер:</span> @campaign.KeeperEmail
                        @if (CurrentUserId == campaign.KeeperEmail)
                        {
                            <span class="ml-1 text-xs px-2 py-0.5 bg-blue-100 text-blue-800 rounded-full">Вы</span>
                        }
                    </div>
                    <div class="text-gray-600 mb-4">
                        <span class="font-medium">Игроки:</span> @campaign.Players?.Count
                    </div>
                    @{
                        var userCharacter = GetUserCharacter(campaign);
                    }
                    @if (userCharacter != null)
                    {
                        <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
                            <div class="bg-gray-50 overflow-hidden shadow rounded-lg">
                                <div class="px-4 py-5 sm:p-6">
                                    <h4 class="text-lg font-medium text-gray-900 truncate">
                                        @userCharacter!.CharacterName
                                    </h4>
                                    <dl class="mt-2 space-y-1">
                                        <div class="text-sm font-normal text-gray-500">
                                            <dt class="inline">Профессия:</dt>
                                            <dd class="inline ml-1">@userCharacter!.Character.PersonalInfo.Occupation</dd>
                                        </div>                                        
                                    </dl>
                                    <div class="mt-4">
                                        <button @onclick="() => EditCharacter(userCharacter.Id)"
                                                class="w-full bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded">
                                            Редактировать
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <p>У вас пока нет персонажей в этой кампании.</p>
                        <div class="mt-4">
                            <button @onclick="() => CreateNewCharacter(campaign.Id)"
                                    class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded">
                                Создать нового персонажа
                            </button>
                        </div>
                    }
                </div>
            }
        </div>
    }
</div>

@code {
    private List<Campaign>? UserCampaigns;
    private bool IsUserAuthenticated => CurrentUserId is not null;
    private string? CurrentUserId;

    protected override async Task OnInitializedAsync()
    {
        CurrentUserId = UserInformationService.GetCurrentUserEmail();
        if (IsUserAuthenticated)
        {
            UserCampaigns = await CampaignService.GetUserCampaignsAsync();
        }
    }

    private CharacterStorageDto? GetUserCharacter(Campaign campaign)
    {
        return campaign.Players?.FirstOrDefault(p => p.PlayerEmail == CurrentUserId)?.Characters?.SingleOrDefault();
    }

    private void EditCharacter(Guid characterId)
    {
        NavigationManager.NavigateTo($"/character/{characterId}");
    }

    private void CreateNewCharacter(Guid campaignId)
    {
        NavigationManager.NavigateTo($"/character/create/{campaignId}");
    }
}